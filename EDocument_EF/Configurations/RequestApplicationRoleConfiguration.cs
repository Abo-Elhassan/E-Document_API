// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using EDocument_Data.Models;
using EDocument_Data.Models.Audit;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace EDocument_EF.Configurations
{
    public partial class RequestApplicationRoleConfiguration : IEntityTypeConfiguration<RequestApplicationRole>
    {
        public void Configure(EntityTypeBuilder<RequestApplicationRole> entity)
        {
          
            entity.ToTable(nameof(RequestApplicationRole), tb => tb.HasTrigger($"TR_{nameof(AuditRequestApplicationRole)}"));

            entity.HasKey(e=> new  {e.RequestId, e.ApplicationId,e.RoleId });

            entity.Property(e => e.CreatedAt)
            .HasColumnType("smalldatetime");

            entity.Property(e => e.ModifiedAt)
            .HasColumnType("smalldatetime");

            entity.Property(e => e.CreatedBy)
            .HasMaxLength(200);

            entity.Property(e => e.ModifiedBy)
            .HasMaxLength(200);

            entity.HasOne(e => e.Request)
            .WithMany(p => p.RequestApplicationRoles)
            .HasForeignKey(e => e.RequestId)
            .OnDelete(DeleteBehavior.Cascade)
            .HasConstraintName("FK_RequestApplicationRole_Request");

            entity.HasOne(e => e.Application)
            .WithMany(p=>p.RequestApplicationRoles)
            .HasForeignKey(e => e.ApplicationId)
            .OnDelete(DeleteBehavior.Restrict)
            .HasConstraintName("FK_RequestApplicationRole_DefinedApplication");

            entity.HasOne(e => e.Role)
            .WithMany(p => p.RequestApplicationRoles)
            .HasForeignKey(e => e.RoleId)
            .OnDelete(DeleteBehavior.Restrict)
            .HasConstraintName("FK_RequestApplicationRole_DefinedApplicationRole");



            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<RequestApplicationRole> entity);
    }
}
